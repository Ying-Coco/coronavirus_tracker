{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cwen13/Desktop/coronavirus_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cwen13/Desktop/coronavirus_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cwen13/Desktop/coronavirus_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{NativeSelect,FormControl}from\"@material-ui/core\";import styles from\"./CountryPicker.module.css\";import{fetchCountries}from\"../../api\";var CountryPicker=function CountryPicker(_ref){var handleCountryChange=_ref.handleCountryChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedCountries=_useState2[0],setFetchedCountries=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setFetchedCountries;_context.next=3;return fetchCountries();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);return/*#__PURE__*/React.createElement(FormControl,{className:styles.FormControl},/*#__PURE__*/React.createElement(NativeSelect,{defaultValue:\"\",onChange:function onChange(e){return handleCountryChange(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Global\"),fetchedCountries.map(function(country,i){return/*#__PURE__*/React.createElement(\"option\",{key:i,value:country},country);})));};export default CountryPicker;","map":{"version":3,"sources":["/Users/cwen13/Desktop/coronavirus_tracker/src/component/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","e","target","value","map","country","i"],"mappings":"6dAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,mBAA1C,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CAEA,OAASC,cAAT,KAA+B,WAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA2B,IAAzBC,CAAAA,mBAAyB,MAAzBA,mBAAyB,eACGP,QAAQ,CAAC,EAAD,CADX,wCACtCQ,gBADsC,eACpBC,mBADoB,eAG7CR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,QAAQ,2FAAG,+IACbD,mBADa,uBACaJ,CAAAA,cAAc,EAD3B,qHAAH,kBAARK,CAAAA,QAAQ,2CAAd,CAIAA,QAAQ,GACX,CANQ,CAMN,EANM,CAAT,CASF,mBACE,oBAAC,WAAD,EAAa,SAAS,CAAEN,MAAM,CAACD,WAA/B,eACE,oBAAC,YAAD,EAAc,YAAY,CAAC,EAA3B,CAA8B,QAAQ,CAAE,kBAACQ,CAAD,QAAOJ,CAAAA,mBAAmB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B,EAAxC,eACE,8BAAQ,KAAK,CAAC,EAAd,WADF,CAEGL,gBAAgB,CAACM,GAAjB,CAAqB,SAACC,OAAD,CAAUC,CAAV,qBAAgB,8BAAQ,GAAG,CAAEA,CAAb,CAAgB,KAAK,CAAED,OAAvB,EAAiCA,OAAjC,CAAhB,EAArB,CAFH,CADF,CADF,CAQD,CApBD,CAqBA,cAAeT,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        };\n\n        fetchAPI();\n    }, []);\n  \n\n  return (\n    <FormControl className={styles.FormControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\nexport default CountryPicker;\n"]},"metadata":{},"sourceType":"module"}