{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cwen13/Desktop/coronavirus_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cwen13/Desktop/coronavirus_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cwen13/Desktop/coronavirus_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{fetchDailyData}from\"../../api\";import{Line,Bar}from\"react-chartjs-2\";import styles from\"./Chart.module.css\";var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData[0]?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255, 0, 0, 0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{lablel:'People',backgroundColor:['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},// eslint-disable-next-line no-template-curly-in-string\ntitle:{display:true,text:'Current State in '+country}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["/Users/cwen13/Desktop/coronavirus_tracker/src/component/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","lablel","value","legend","display","title","text","container"],"mappings":"6dAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAoD,oBAAlDC,IAAkD,CAA5CC,SAA4C,WAA5CA,SAA4C,CAAjCC,SAAiC,WAAjCA,SAAiC,CAAtBC,MAAsB,WAAtBA,MAAsB,CAAbC,OAAa,MAAbA,OAAa,eAC9BX,QAAQ,CAAC,EAAD,CADsB,wCACzDY,SADyD,eAC9CC,YAD8C,eAGhEZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,QAAQ,2FAAG,+IACfD,YADe,uBACIX,CAAAA,cAAc,EADlB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAIAA,QAAQ,GACT,CANQ,CAMN,EANM,CAAT,CAQA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAAC,CAAD,CAAT,cAEI,oBAAC,IAAD,EACA,IAAI,CAAG,CACHI,MAAM,CAACJ,SAAS,CAACK,GAAV,CAAc,mBAAEC,CAAAA,IAAF,OAAEA,IAAF,OAAYA,CAAAA,IAAZ,EAAd,CADJ,CAEHC,QAAQ,CAAE,CAAC,CACPZ,IAAI,CAACK,SAAS,CAACK,GAAV,CAAc,mBAAET,CAAAA,SAAF,OAAEA,SAAF,OAAiBA,CAAAA,SAAjB,EAAd,CADE,CAEPY,KAAK,CAAE,UAFA,CAGPC,WAAW,CAAE,SAHN,CAIPC,IAAI,CAAE,IAJC,CAAD,CAMP,CACDf,IAAI,CAACK,SAAS,CAACK,GAAV,CAAc,mBAAEP,CAAAA,MAAF,OAAEA,MAAF,OAAcA,CAAAA,MAAd,EAAd,CADJ,CAEDU,KAAK,CAAE,QAFN,CAGDC,WAAW,CAAE,KAHZ,CAIDE,eAAe,CAAE,sBAJhB,CAKDD,IAAI,CAAE,IALL,CANO,CAFP,CADP,EAFJ,CAoBE,IArBN,CAwBA,GAAME,CAAAA,QAAQ,CACZhB,SAAS,cAEP,oBAAC,GAAD,EAAK,IAAI,CAAE,CACTQ,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADC,CAETG,QAAQ,CAAE,CAAC,CACTM,MAAM,CAAC,QADE,CAETF,eAAe,CAAE,CAAE,sBAAF,CAA0B,sBAA1B,CAAkD,sBAAlD,CAFR,CAGThB,IAAI,CAAE,CAACC,SAAS,CAACkB,KAAX,CAAkBjB,SAAS,CAACiB,KAA5B,CAAmChB,MAAM,CAACgB,KAA1C,CAHG,CAAD,CAFD,CAAX,CAOG,OAAO,CAAE,CACVC,MAAM,CAAE,CAACC,OAAO,CAAE,KAAV,CADE,CAEV;AACAC,KAAK,CAAE,CAACD,OAAO,CAAE,IAAV,CAAgBE,IAAI,CAAC,oBAAsBnB,OAA3C,CAHG,CAPZ,EAFO,CAeN,IAhBL,CAkBF,mBACI,2BAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,EACKpB,OAAO,CAAGa,QAAH,CAAcT,SAD1B,CADJ,CAKC,CA1DD,CA2DA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = (\n      dailyData[0]\n      ?(\n          <Line \n          data ={{\n              labels:dailyData.map(({date}) => date),\n              datasets: [{\n                  data:dailyData.map(({confirmed}) => confirmed),\n                  label: 'Infected',\n                  borderColor: '#3333ff',\n                  fill: true, \n                  \n              }, {\n                data:dailyData.map(({deaths}) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true, \n              }]\n          }}\n          />\n      ):null\n  );\n\n  const barChart =(\n    confirmed\n    ? (\n      <Bar data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [{\n          lablel:'People',\n          backgroundColor: [ 'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n          data: [confirmed.value, recovered.value, deaths.value]\n        }]\n      }} options={{\n        legend: {display: false},\n        // eslint-disable-next-line no-template-curly-in-string\n        title: {display: true, text:'Current State in ' + country},\n      }}\n      />\n    ): null\n  )\nreturn (\n    <div className={styles.container}>\n        {country ? barChart : lineChart}\n    </div>\n)\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}