{"ast":null,"code":"var _jsxFileName = \"/Users/cwen13/Desktop/coronavirus_tracker/src/component/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        lablel: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      // eslint-disable-next-line no-template-curly-in-string\n      title: {\n        display: true,\n        text: 'Current State in' + country\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/cwen13/Desktop/coronavirus_tracker/src/component/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","lablel","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAN;AAAsCC,EAAAA;AAAtC,CAAD,KAAoD;AAChE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACD,KAFD;;AAIAY,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAAC,CAAD,CAAT,gBAEI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAG;AACHI,MAAAA,MAAM,EAACJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADJ;AAEHC,MAAAA,QAAQ,EAAE,CAAC;AACPZ,QAAAA,IAAI,EAACK,SAAS,CAACK,GAAV,CAAc,CAAC;AAACT,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADE;AAEPY,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACDf,QAAAA,IAAI,EAACK,SAAS,CAACK,GAAV,CAAc,CAAC;AAACP,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADJ;AAEDU,QAAAA,KAAK,EAAE,QAFN;AAGDC,QAAAA,WAAW,EAAE,KAHZ;AAIDE,QAAAA,eAAe,EAAE,sBAJhB;AAKDD,QAAAA,IAAI,EAAE;AALL,OALO;AAFP,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAmBE,IApBN;AAuBA,QAAME,QAAQ,GACZhB,SAAS,gBAEP,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE;AACTQ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADC;AAETG,MAAAA,QAAQ,EAAE,CAAC;AACTM,QAAAA,MAAM,EAAC,QADE;AAETF,QAAAA,eAAe,EAAE,CAAE,sBAAF,EAA0B,sBAA1B,EAAkD,sBAAlD,CAFR;AAGThB,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACkB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmChB,MAAM,CAACgB,KAA1C;AAHG,OAAD;AAFD,KAAX;AAOG,IAAA,OAAO,EAAE;AACVC,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADE;AAEV;AACAC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAC,qBAAqBnB;AAA1C;AAHG,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,GAeN,IAhBL;AAkBF,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,OAAO,GAAGa,QAAH,GAAcT,SAD1B,CADJ;AAKC,CAzDD;;AA0DA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = (\n      dailyData[0]\n      ?(\n          <Line \n          data ={{\n              labels:dailyData.map(({date}) => date),\n              datasets: [{\n                  data:dailyData.map(({confirmed}) => confirmed),\n                  label: 'Infected',\n                  borderColor: '#3333ff',\n                  fill: true, \n              }, {\n                data:dailyData.map(({deaths}) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true, \n              }]\n          }}\n          />\n      ):null\n  );\n\n  const barChart =(\n    confirmed\n    ? (\n      <Bar data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [{\n          lablel:'People',\n          backgroundColor: [ 'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n          data: [confirmed.value, recovered.value, deaths.value]\n        }]\n      }} options={{\n        legend: {display: false},\n        // eslint-disable-next-line no-template-curly-in-string\n        title: {display: true, text:'Current State in' + country},\n      }}\n      />\n    ): null\n  )\nreturn (\n    <div className={styles.container}>\n        {country ? barChart : lineChart}\n    </div>\n)\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}